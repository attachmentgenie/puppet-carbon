[cache:<%= @cache_name %>]
<% if scope.lookupvar('carbon::cc_enable_amqp') == "True" -%>
AMQP_VERBOSE                       = <%= scope.lookupvar('carbon::cc_amqp_verbose') %>
AMQP_HOST                          = <%= scope.lookupvar('carbon::cc_amqp_host') %>
AMQP_PORT                          = <%= scope.lookupvar('carbon::cc_amqp_port') %>
AMQP_VHOST                         = <%= scope.lookupvar('carbon::cc_amqp_vhost') %>
AMQP_USER                          = <%= scope.lookupvar('carbon::cc_amqp_user') %>
AMQP_PASSWORD                      = <%= scope.lookupvar('carbon::cc_amqp_password') %>
AMQP_EXCHANGE                      = <%= scope.lookupvar('carbon::cc_amqp_exchange') %>
AMQP_METRIC_NAME_IN_BODY           = <%= scope.lookupvar('carbon::cc_amqp_metric_name_in_body') %>
<% end -%>
<% if scope.lookupvar('carbon::cc_bind_patterns') -%>
BIND_PATTERNS                      = <%= scope.lookupvar('carbon::cc_bind_patterns') %>
<% end -%>
<% unless [:undef, nil].include? scope['carbon::cc_cache_query_backlog'] -%>
CACHE_QUERY_BACKLOG                = <%= scope['carbon::cc_cache_query_backlog'] %>
<% end -%>
CACHE_QUERY_INTERFACE              = <%= scope.lookupvar('carbon::cc_cache_query_interface') %>
CACHE_QUERY_PORT                   = <%= @cache_query_port %>
CACHE_WRITE_STRATEGY               = <%= scope.lookupvar('carbon::cc_cache_write_strategy') %>
CARBON_METRIC_PREFIX               = <%= scope.lookupvar('carbon::cc_carbon_metric_prefix') %>
CARBON_METRIC_INTERVAL             = <%= scope.lookupvar('carbon::cc_carbon_metric_interval') %>
CONF_DIR                           = <%= scope.lookupvar('carbon::gr_config_dir') %>/
ENABLE_AMQP                        = <%= scope.lookupvar('carbon::cc_enable_amqp') %>
ENABLE_LOGROTATION                 = <%= scope.lookupvar('carbon::cc_enable_logrotation') %>
ENABLE_MANHOLE                     = <%= scope.lookupvar('carbon::cc_enable_manhole') %>
ENABLE_UDP_LISTENER                = <%= scope.lookupvar('carbon::cc_enable_udp_listener') %>
<% unless [:undef, nil].include? scope['carbon::cc_line_receiver_backlog'] -%>
LINE_RECEIVER_BACKLOG              = <%= scope['carbon::cc_line_receiver_backlog'] %>
<% end -%>
LINE_RECEIVER_INTERFACE            = <%= @line_receiver_interface %>
LINE_RECEIVER_PORT                 = <%= @line_receiver_port %>
<% if scope.lookupvar('carbon::cc_local_data_dir') -%>
LOCAL_DATA_DIR                     = <%= scope.lookupvar('carbon::cc_local_data_dir') %>/
<% end -%>
LOG_CACHE_HITS                     = <%= scope.lookupvar('carbon::cc_log_cache_hits') %>
LOG_CACHE_QUEUE_SORTS              = <%= scope.lookupvar('carbon::cc_log_cache_queue_sorts') %>
LOG_DIR                            = <%= scope.lookupvar('carbon::cc_log_dir') %>/
LOG_LISTENER_CONNECTIONS           = <%= scope.lookupvar('carbon::cc_log_listener_connections') %>
LOG_UPDATES                        = <%= scope.lookupvar('carbon::cc_log_updates') %>
<% if scope.lookupvar('carbon::cc_enable_manhole') == "True" -%>
MANHOLE_INTERFACE                  = <%= scope.lookupvar('carbon_cc_manhole_interface') %>
MANHOLE_PORT                       = <%= scope.lookupvar('carbon_cc_manhole_port') %>
MANHOLE_USER                       = <%= scope.lookupvar('carbon_cc_manhole_user') %>
MANHOLE_PUBLIC_KEY                 = <%= scope.lookupvar('carbon_cc_manhole_public_key') %>
<% end -%>
MAX_CACHE_SIZE                     = <%= scope.lookupvar('carbon::cc_max_cache_size') %>
MAX_CREATES_PER_MINUTE             = <%= scope.lookupvar('carbon::cc_max_creates_per_minute') %>
MAX_UPDATES_PER_SECOND             = <%= scope.lookupvar('carbon::cc_max_updates_per_second') %>
<% unless [:undef, nil].include? scope['carbon::cc_max_updates_per_second_on_shutdown'] -%>
MAX_UPDATES_PER_SECOND_ON_SHUTDOWN = <%= scope['carbon::cc_max_updates_per_second_on_shutdown'] %>
<% end -%>
PICKLE_RECEIVER_INTERFACE          = <%= @pickle_receiver_interface %>
PICKLE_RECEIVER_PORT               = <%= @pickle_receiver_port %>
<% unless [:undef, nil].include? scope['carbon::cc_pickle_receiver_backlog'] -%>
PICKLE_RECEIVER_BACKLOG            = <%= scope['carbon::cc_pickle_receiver_backlog'] %>
<% end -%>
PID_DIR                            = <%= scope.lookupvar('carbon::cc_pid_dir') %>/
STORAGE_DIR                        = <%= scope.lookupvar('carbon::cc_storage_dir') %>/
UDP_RECEIVER_INTERFACE             = <%= @udp_receiver_interface %>
UDP_RECEIVER_PORT                  = <%= @udp_receiver_port %>
USE_FLOW_CONTROL                   = <%= scope.lookupvar('carbon::cc_use_flow_control') %>
USE_INSECURE_UNPICKLER             = <%= scope.lookupvar('carbon::cc_use_insecure_unpickler') %>
<% unless [:undef, nil].include? scope['carbon::cc_use_whitelist'] -%>
USE_WHITELIST                      = <%= scope['carbon::cc_use_whitelist'] %>
<% end -%>
USER                               = <%= scope.lookupvar('carbon::gr_user') %>
WHISPER_AUTOFLUSH                  = <%= scope.lookupvar('carbon::cc_whisper_autoflush') %>
WHISPER_FALLOCATE_CREATE           = <%= scope.lookupvar('carbon::cc_whisper_fallocate_create') %>
<% unless [:undef, nil].include? scope['carbon::cc_whisper_lock_writes'] -%>
WHISPER_LOCK_WRITES                = <%= scope['carbon::cc_whisper_lock_writes'] %>
<% end -%>
<% unless [:undef, nil].include? scope['carbon::cc_whisper_sparse_create'] -%>
WHISPER_SPARSE_CREATE              = <%= scope['carbon::cc_whisper_sparse_create'] %>
<% end -%>
WHITELISTS_DIR                     = <%= scope.lookupvar('carbon::cc_whitelists_dir') %>/

